/*
Существует два варианта синтаксиса для создания пустого массива:
let arr = new Array();
let arr = [];
Элементы массива нумеруются, начиная с нуля.

Обращение к элементам
let fruits = ["Яблоко", "Апельсин", "Слива"];
alert( fruits[0] ); // Яблоко
alert( fruits[1] ); // Апельсин
alert( fruits[2] ); // Слива

Замена элемента
fruits[2] = 'Груша';
Либо таким же способом добавить новый элемент, при условии что данный порядковый номер еще не существовал

Узнать длину массива
let fruits = ["Яблоко", "Апельсин", "Слива"];
alert( fruits.length ); // 3

// разные типы значений
let arr = [ 'Яблоко', { name: 'Джон' }, true, function() { alert('привет'); } ];
// получить элемент с индексом 1 (объект) и затем показать его свойство
alert( arr[1].name ); // Джон
// получить элемент с индексом 3 (функция) и выполнить её
arr[3](); // привет




Методы:
pop - Удаляет последний элемент из массива и возвращает его:
let fruits = ["Яблоко", "Апельсин", "Груша"];
alert( fruits.pop() ); // удаляем "Груша" и выводим его
alert( fruits ); // Яблоко, Апельсин

push - Добавляет элемент в конец массива:
let fruits = ["Яблоко", "Апельсин"];
fruits.push("Груша");
alert( fruits ); // Яблоко, Апельсин, Груша

shift - Удаляет из массива первый элемент и возвращает его:
let fruits = ["Яблоко", "Апельсин", "Груша"];
alert( fruits.shift() ); // удаляем Яблоко и выводим его
alert( fruits ); // Апельсин, Груша

unshift - Добавляет элемент в начало массива:
let fruits = ["Апельсин", "Груша"];
fruits.unshift('Яблоко');
alert( fruits ); // Яблоко, Апельсин, Груша

Возможно добавление сразу нескольких элементов
fruits.push("Апельсин", "Груша");
fruits.unshift("Ананас", "Лимон");

Массивы при присваивании ссылаются на один и тот же объект
let fruits = ["Банан"]
let arr = fruits; // копируется по ссылке (две переменные ссылаются на один и тот же массив)
alert( arr === fruits ); // true
arr.push("Груша"); // массив меняется по ссылке
alert( fruits ); // Банан, Груша - теперь два элемента


Перебор элементов
Стандартный способ:
let arr = ["Яблоко", "Апельсин", "Груша"];
for (let i = 0; i < arr.length; i++) {
  alert( arr[i] );
}

Без получения ключа, только по значениям
let fruits = ["Яблоко", "Апельсин", "Слива"];
// проходит по значениям
for (let fruit of fruits) {
  alert( fruit );
}

С получением ключа
let arr = ["Яблоко", "Апельсин", "Груша"];
for (let key in arr) {
  alert( arr[key] ); // Яблоко, Апельсин, Груша
}

Многомерные массивы
let matrix = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9]
];
alert( matrix[1][1] ); // 5, центральный элемент

splice - метод удаления и замены элементов в массиве. Заменяет существующий массив
let arr = ["Я", "изучаю", "JavaScript", "прямо", "сейчас"];
// удалить 3 первых элемента и заменить их другими
arr.splice(0, 3, "Давай", "танцевать");
alert( arr ) // теперь ["Давай", "танцевать", "прямо", "сейчас"]

slice - то же самое, что splice, но создает новый массив
let arr = ["t", "e", "s", "t"];
alert( arr.slice(1, 3) ); // e,s (копирует с 1 до 3)
alert( arr.slice(-2) ); // s,t (копирует с -2 до конца)

concat - создаёт новый массив, в который копирует данные из других массивов и дополнительные значения.
let arr = [1, 2];
// создать массив из: arr и [3,4]
alert( arr.concat([3, 4]) ); // 1,2,3,4
// создать массив из: arr и [3,4] и [5,6]
alert( arr.concat([3, 4], [5, 6]) ); // 1,2,3,4,5,6
// создать массив из: arr и [3,4], потом добавить значения 5 и 6
alert( arr.concat([3, 4], 5, 6) ); // 1,2,3,4,5,6

forEach - позволяет запускать функцию для каждого элемента массива.
// Вызов alert для каждого элемента
["Bilbo", "Gandalf", "Nazgul"].forEach(alert);

arr.indexOf, arr.lastIndexOf и arr.includes - методы поиска в массиве
arr.indexOf(item, from) ищет item, начиная с индекса from, и возвращает индекс, на котором был найден искомый элемент, в противном случае -1.
arr.lastIndexOf(item, from) – то же самое, но ищет справа налево.
arr.includes(item, from) – ищет item, начиная с индекса from, и возвращает true, если поиск успешен.
let arr = [1, 0, false];
alert( arr.indexOf(0) ); // 1
alert( arr.indexOf(false) ); // 2
alert( arr.indexOf(null) ); // -1
alert( arr.includes(1) ); // true

find и findIndex - поиск в массиве из объектов
let users = [
  {id: 1, name: "Вася"},
  {id: 2, name: "Петя"},
  {id: 3, name: "Маша"}
];
let user = users.find(item => item.id == 1);
alert(user.name); // Вася

filter - возвращает все значения совпадающие по условию
let users = [
  {id: 1, name: "Вася"},
  {id: 2, name: "Петя"},
  {id: 3, name: "Маша"}
];
// возвращает массив, состоящий из двух первых пользователей
let someUsers = users.filter(item => item.id < 3);
alert(someUsers.length); // 2

map - Он вызывает функцию для каждого элемента массива и возвращает массив результатов выполнения этой функции.
let lengths = ["Bilbo", "Gandalf", "Nazgul"].map(item => item.length);
alert(lengths); // 5,7,6

sort(fn) - сортирует массив на месте, меняя в нём порядок элементов.
let arr = [ 1, 2, 15 ];
// метод сортирует содержимое arr
arr.sort();
alert( arr );  // 1, 15, 2
По умолчанию элементы сортируются как строки.

reverse - меняет порядок элементов в arr на обратный.
let arr = [1, 2, 3, 4, 5];
arr.reverse();
alert( arr ); // 5,4,3,2,1

split - разбивает строку на массив по заданному разделителю
let names = 'Вася, Петя, Маша';
let arr = names.split(', '); // ['Вася', 'Петя', 'Маша']

join - создаёт строку из элементов arr, вставляя glue между ними
let arr = ['Вася', 'Петя', 'Маша'];
let str = arr.join(';'); // объединить массив в строку через ;
alert( str ); // Вася;Петя;Маша





*/

let styles = ["Джаз", "Блюз"];

//задачи
//1. Перебор массива с выводом в консоль кажого элемента
let arr = ["Яблоко", "Апельсин", "Груша"];
for (let i = 0; i < arr.length; i++) {
  console.log( arr[i] );
}

//2. Перобразовать массив в строку и обртано в массив 
let styles = ["Джаз", "Блюз"];
let stringArr = String(styles);
console.log(stringArr);

let backArr = stringArr.split(", ");
console.log(backArr);

//3. Добавить к каждому элементу массива слова hello 
let styles = ["Джаз", "Блюз"];
let newArr = styles.map(item => item + "Hello");
console.log(newArr);

//4, Преобразовать числовой массив в boolean
let numArr = [1, 2, 3, 4]
let boolArr = Boolean(numArr);
console.log(boolArr);